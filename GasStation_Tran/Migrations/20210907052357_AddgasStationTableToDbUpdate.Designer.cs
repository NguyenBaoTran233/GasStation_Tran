// <auto-generated />
using System;
using GasStation_Tran.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GasStation_Tran.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210907052357_AddgasStationTableToDbUpdate")]
    partial class AddgasStationTableToDbUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GasStation_Tran.Models.GasStationAdd", b =>
                {
                    b.Property<string>("GasStationName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasStationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GasStationName");

                    b.ToTable("gasStationAdds");
                });

            modelBuilder.Entity("GasStation_Tran.Models.GasStationTable", b =>
                {
                    b.Property<string>("GasStationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DeleteBy")
                        .HasColumnType("bigint");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasStationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasStationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GasStationTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("InsertBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpeningTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UpdateBy")
                        .HasColumnType("bigint");

                    b.HasKey("GasStationId");

                    b.ToTable("gasStationTable");
                });
#pragma warning restore 612, 618
        }
    }
}
